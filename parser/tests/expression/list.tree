NodeTypeFile
  end-rune = 109
  start-rune = 0
  child-node =>
    NodeTypeFunction
      end-rune = 109
      named = SomeFunction
      start-rune = 0
      typemember-body =>
        NodeTypeStatementBlock
          end-rune = 109
          start-rune = 30
          block-child =>
            NodeListExpression
              end-rune = 34
              start-rune = 33
            NodeListExpression
              end-rune = 45
              start-rune = 37
              list-expr-value =>
                NodeNumericLiteralExpression
                  end-rune = 38
                  literal-value = 1
                  start-rune = 38
                NodeNumericLiteralExpression
                  end-rune = 41
                  literal-value = 2
                  start-rune = 41
                NodeNumericLiteralExpression
                  end-rune = 44
                  literal-value = 3
                  start-rune = 44
            NodeListExpression
              end-rune = 71
              start-rune = 48
              list-expr-value =>
                NodeNumericLiteralExpression
                  end-rune = 49
                  literal-value = 1
                  start-rune = 49
                NodeBooleanLiteralExpression
                  end-rune = 55
                  literal-value = true
                  start-rune = 52
                NodeStringLiteralExpression
                  end-rune = 70
                  literal-value = 'hello world'
                  start-rune = 58
            NodeListExpression
              end-rune = 107
              start-rune = 74
              list-expr-value =>
                NodeBinaryAddExpression
                  end-rune = 79
                  start-rune = 75
                  binary-expression-left =>
                    NodeTypeIdentifierExpression
                      end-rune = 76
                      identexpr-name = a
                      start-rune = 75
                  binary-expression-right =>
                    NodeTypeIdentifierExpression
                      end-rune = 79
                      identexpr-name = b
                      start-rune = 79
                NodeBinarySubtractExpression
                  end-rune = 87
                  start-rune = 83
                  binary-expression-left =>
                    NodeTypeIdentifierExpression
                      end-rune = 84
                      identexpr-name = c
                      start-rune = 83
                  binary-expression-right =>
                    NodeTypeIdentifierExpression
                      end-rune = 87
                      identexpr-name = d
                      start-rune = 87
                NodeFunctionCallExpression
                  end-rune = 99
                  start-rune = 94
                  function-call-expr =>
                    NodeMemberAccessExpression
                      end-rune = 97
                      member-access-identifier = bar
                      start-rune = 91
                      member-access-expr =>
                        NodeTypeIdentifierExpression
                          end-rune = 93
                          identexpr-name = foo
                          start-rune = 91
                NodeTemplateStringLiteralExpression
                  end-rune = 106
                  literal-value = `baz`
                  start-rune = 102
      typemember-return-type =>
        NodeTypeTypeReference
          end-rune = 12
          start-rune = 9
          typereference-path =>
            NodeTypeVoid
              end-rune = 12
              start-rune = 9