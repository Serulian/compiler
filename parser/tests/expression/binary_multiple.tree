NodeTypeFile
  end-rune = 59
  start-rune = 0
  child-node =>
    NodeTypeFunction
      end-rune = 59
      named = SomeFunction
      start-rune = 0
      typemember-body =>
        NodeTypeStatementBlock
          end-rune = 59
          start-rune = 30
          block-child =>
            NodeBinaryAddExpression
              end-rune = 57
              start-rune = 43
              binary-expression-left =>
                NodeBinaryAddExpression
                  end-rune = 46
                  start-rune = 33
                  binary-expression-left =>
                    NodeBinarySubtractExpression
                      end-rune = 42
                      start-rune = 33
                      binary-expression-left =>
                        NodeBinaryDivideExpression
                          end-rune = 38
                          start-rune = 33
                          binary-expression-left =>
                            NodeTypeIdentifierExpression
                              end-rune = 34
                              identexpr-name = a
                              start-rune = 33
                          binary-expression-right =>
                            NodeTypeIdentifierExpression
                              end-rune = 38
                              identexpr-name = b
                              start-rune = 37
                      binary-expression-right =>
                        NodeTypeIdentifierExpression
                          end-rune = 42
                          identexpr-name = c
                          start-rune = 41
                  binary-expression-right =>
                    NodeTypeIdentifierExpression
                      end-rune = 46
                      identexpr-name = d
                      start-rune = 45
              binary-expression-right =>
                NodeBinaryModuloExpression
                  end-rune = 57
                  start-rune = 49
                  binary-expression-left =>
                    NodeBinaryMultiplyExpression
                      end-rune = 54
                      start-rune = 49
                      binary-expression-left =>
                        NodeTypeIdentifierExpression
                          end-rune = 50
                          identexpr-name = e
                          start-rune = 49
                      binary-expression-right =>
                        NodeTypeIdentifierExpression
                          end-rune = 54
                          identexpr-name = f
                          start-rune = 53
                  binary-expression-right =>
                    NodeTypeIdentifierExpression
                      end-rune = 57
                      identexpr-name = g
                      start-rune = 57
      typemember-return-type =>
        NodeTypeTypeReference
          end-rune = 12
          start-rune = 9
          typereference-path =>
            NodeTypeVoid
              end-rune = 12
              start-rune = 9