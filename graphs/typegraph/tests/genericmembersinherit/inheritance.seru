class FirstBaseType<T> {
	function<T> DoSomething(foo T, bar T) {}

	property<int> SomeCoolProp {
		get {}
	}
	property<int> MainProp {
		get {}
	}
}

class SecondBaseType<Q> {
	function<int> DoSomething() {}

	property<Q> SomeOtherProp {
		get {}
	}
}

class SomeDerivingType<T> : FirstBaseType<SecondBaseType> + SecondBaseType<T> {
	property<FirstBaseType> MainProp {
		get {}
	}
}