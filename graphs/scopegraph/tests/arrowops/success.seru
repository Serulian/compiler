class SomePromise {
	function Then(callback function<void>(int)) awaitable<int> {
		return this
	}

	function Catch(callback function<void>(error)) awaitable<int> {
		return this
	}
}

function DoSomething() {
	var promise SomePromise = SomePromise.new()
	var someInt int = 2

	/* await */(<- promise)
	someInt <- promise
}

function NullableTest() {
	var promise SomePromise = SomePromise.new()
	var someInt int?
	someInt <- promise
}

function RejectionTest() {
	var promise SomePromise = SomePromise.new()
	var someInt int?
	var someError error?

	someInt, _ <- promise
	_, someError <- promise
	_, _ <- promise
}

function AnotherFunction() {
	DoSomething()
}
