class SomeType {
	function<void> DoSomething() {}
}

type MyType : SomeType {
	function<void> AnotherFunction() {
		/* this */this
		/* sometype */(SomeType(this))
		SomeType(this).DoSomething()
	}
}

type AnotherType : MyType {
	function<void> AnotherFunction() {
		MyType(this)
		SomeType(this)
	}
}

type GenericType<T> : MyType {
	function<T> DoSomething(someParam T) {
		return someParam
	}
}

function<void> CoolFunction(m MyType) {
	/* m */m
	m.AnotherFunction()

	/* at */(AnotherType(m))
	/* gt */(GenericType<int>(m))
}