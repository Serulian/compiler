import anotherfile
import somepackage
from anotherfile import AnotherClass
from anotherfile import ExportedFunction as EF
from anotherfile import ThirdClass as TC
from anotherfile import unexportedFunction as UEF
from somepackage import ExportedFunction as SEF

class SomeClass {}

function DoSomething(someparam int) /* dosomething */{
	var someVar int
	if true /* if */{}
}

function AnotherFunc() /* anotherfunc */{}

function AliasTest(aliased int) /* aliasfn */{
	var aliased bool
	if true /* aliasif */{}
}

function WithTest() /* withfn */{
	with something as SomeName /* withblock */{}
}

function LoopTest() /* loopfn */{
	for SomeLoopValue in something /* loopblock */{}
}

function LambdaTest() {
	(a, b) => /* lambdaexpr */a
}

function FullLambdaTest() {
	function(a int, b bool) {
		/* fulllambdabody */a
	}
}

function VarReference() {
	var someVar = /* somevarexpr */2
	var anotherVar = function() /* funcclosure */{}
}

function ResolveReference() {
	a, b := /* resolvesource */1234
	if true /* afterresolve */{}
}
