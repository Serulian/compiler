/**
 * SomeInterface is some cool interface
 */
@â€¢typealias('coolInterface')
interface SomeInterface<T : int, R : arrrrr> {
	constructor SecondConstructor() {
		return SomeClass<T>.new()
	}

	constructor FirstConstructor(oneParam Here) {
		reject Because.ThatsWhy()
	}

	function DoSomething<Q : any>(firstParam int, secondParam string*)

	/**
	 * SomeProp is some sort of prop.
	 */
	property SomeProp SomeType?

	property GetterProp bool { get }

	operator Range(first int, second int)

	operator someOp(onlyOneParam here) someOpReturn

	function AnotherFunction() int
}
